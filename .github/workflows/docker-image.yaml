jobs:
  docker_build:
    name: Build and push OFBiz docker container images
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out OFBiz sources
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
    - continue-on-error: true
      if: ${{ !env.ACT && vars.DO_DOCKER_PUSH == 'true' }}
      name: Log in to the Container registry
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - continue-on-error: true
      id: runtimemeta
      name: Determine metadata (tags, labels) for Docker runtime build
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
      with:
        images: ghcr.io/apache/ofbiz
        tags: '# Extract container tag from git tag.

          type=match,pattern=release(.*),group=1

          # Build container tag based on branch name and string ''-snapshot''

          type=ref,event=branch,suffix=-snapshot,priority=650

          '
    - continue-on-error: true
      name: Update VERSION file
      run: '# Populate the VERSION file based on the outputs of the metadata-action
        above.

        # The same VERSION file will be used for all container images built in this
        workflow.


        # Set the version label for this build.

        echo "${{fromJSON(steps.runtimemeta.outputs.json).labels[''org.opencontainers.image.version'']}}.
        " > VERSION


        # Append the git commit SHA.

        echo ''${uiLabelMap.CommonRevision}:'' "${{fromJSON(steps.runtimemeta.outputs.json).labels[''org.opencontainers.image.revision'']}}.
        " >> VERSION


        # Append the timestamp.

        echo ''${uiLabelMap.CommonBuiltOn}:'' "${{fromJSON(steps.runtimemeta.outputs.json).labels[''org.opencontainers.image.created'']}}.
        " >> VERSION


        echo "Version file contents:"

        cat VERSION

        '
    - continue-on-error: true
      name: Build and push runtime docker image
      uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
      with:
        context: .
        labels: ${{ steps.runtimemeta.outputs.labels }}
        push: false
        tags: ${{ steps.runtimemeta.outputs.tags }}
        target: runtime
    - continue-on-error: true
      id: demometa
      name: Determine metadata (tags, labels) for Docker demo-preload build
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
      with:
        images: ghcr.io/apache/ofbiz
        tags: 'type=match,pattern=release(.*),group=1,suffix=-preloaddemo

          type=ref,event=branch,suffix=-preloaddemo-snapshot,priority=650

          '
    - continue-on-error: true
      name: Build and push demo docker image
      uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
      with:
        context: .
        labels: ${{ steps.demometa.outputs.labels }}
        push: false
        tags: ${{ steps.demometa.outputs.tags }}
        target: demo
    - continue-on-error: true
      name: Grant execute permission for pullAllPluginsSource.sh
      run: chmod +x pullAllPluginsSource.sh
    - continue-on-error: true
      name: Load all plugins
      run: ./pullAllPluginsSource.sh
    - continue-on-error: true
      id: pluginsmeta
      name: Determine metadata (tags, labels) for Docker framework with plugins build
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
      with:
        images: ghcr.io/apache/ofbiz
        tags: 'type=match,pattern=release(.*),group=1,suffix=-plugins

          type=ref,event=branch,suffix=-plugins-snapshot,priority=650

          '
    - continue-on-error: true
      name: Build and push framework with plugins docker image
      uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
      with:
        context: .
        labels: ${{ steps.pluginsmeta.outputs.labels }}
        push: false
        tags: ${{ steps.pluginsmeta.outputs.tags }}
        target: runtime
name: Build and push docker images
on:
  repository_dispatch:
    types: trigger-ga___docker-image.yaml
